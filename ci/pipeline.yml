---
jobs:
- name: deploy-concourse-staging
  serial: true
  plan:
  - aggregate:
    - get: concourse-deployment
      trigger: true
    - get: concourse-config
      trigger: true
    - get: common-staging
      trigger: true
    - get: terraform-yaml
    - get: concourse-stemcell
      trigger: true
  - put: concourse-staging-deployment
    params: &deploy-params
      manifest: concourse-deployment/cluster/concourse.yml
      stemcells:
      - concourse-stemcell/*.tgz
      ops_files:
      - concourse-deployment/cluster/operations/basic-auth.yml
      - concourse-deployment/cluster/operations/external-postgres.yml
      - concourse-deployment/cluster/operations/external-postgres-tls.yml
      - concourse-deployment/cluster/operations/build-log-retention.yml
      - concourse-deployment/cluster/operations/scale.yml
      - concourse-config/operations/iaas-worker.yml
      - concourse-config/operations/latest-stemcell.yml
      - concourse-config/operations/postgres-staging.yml
      - concourse-config/operations/driver.yml
      - concourse-config/operations/config.yml
      - concourse-config/operations/generic-oauth.yml
      - concourse-config/operations/compliance.yml
      - concourse-config/operations/prometheus.yml
      vars_files:
      - concourse-deployment/versions.yml
      - concourse-config/variables/staging.yml
      - concourse-config/variables/postgres-tls.yml
      - terraform-yaml/state.yml
      - common-staging/concourse-tooling-staging.yml
  - task: smoke-test
    file: concourse-config/ci/smoke-test.yml
    params:
      ATC_URL: http://0.web.staging-concourse.concourse-staging.toolingbosh:8080
      BASIC_AUTH_USERNAME: ((basic-auth-username-staging))
      BASIC_AUTH_PASSWORD: ((basic-auth-password-staging))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy Concourse on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed Concourse on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-concourse-production
  serial: true
  plan:
  - aggregate:
    - get: concourse-deployment
      passed: [deploy-concourse-staging]
      trigger: true
    - get: concourse-config
      passed: [deploy-concourse-staging]
      trigger: true
    - get: terraform-yaml
    - get: common-production
      trigger: true
    - get: concourse-stemcell
      trigger: true
      passed: [deploy-concourse-staging]
  - put: concourse-production-deployment
    params:
      <<: *deploy-params
      ops_files:
      - concourse-deployment/cluster/operations/external-postgres.yml
      - concourse-deployment/cluster/operations/external-postgres-tls.yml
      - concourse-deployment/cluster/operations/scale.yml
      - concourse-config/operations/iaas-worker.yml
      - concourse-config/operations/latest-stemcell.yml
      - concourse-config/operations/postgres-production.yml
      - concourse-config/operations/driver.yml
      - concourse-config/operations/config.yml
      - concourse-config/operations/generic-oauth.yml
      - concourse-config/operations/compliance.yml
      - concourse-config/operations/prometheus.yml
      vars_files:
      - concourse-deployment/versions.yml
      - concourse-config/variables/production.yml
      - concourse-config/variables/postgres-tls.yml
      - terraform-yaml/state.yml
      - common-production/concourse-tooling-prod.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy Concourse on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed Concourse on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: concourse-deployment
  type: git
  source:
    uri: https://github.com/concourse/concourse-bosh-deployment
    branch: master
    tag_filter: v*

- name: concourse-config
  type: git
  source:
    uri: ((concourse-config-git-url))
    branch: ((concourse-config-git-branch))

- name: common-production
  type: s3-iam
  source:
    bucket: ((secrets-bucket))
    region_name: ((aws-region))
    versioned_file: concourse-tooling-prod.yml

- name: common-staging
  type: s3-iam
  source:
    bucket: ((secrets-bucket))
    region_name: ((aws-region))
    versioned_file: concourse-tooling-staging.yml 

- name: concourse-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: concourse-production-deployment
  type: bosh-deployment
  source:
    target: ((concourse-production-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    deployment: ((concourse-production-deployment-bosh-deployment))
    ca_cert: ((common_ca_cert_store))

- name: concourse-staging-deployment
  type: bosh-deployment
  source:
    target: ((concourse-staging-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    deployment: ((concourse-staging-deployment-bosh-deployment))
    ca_cert: ((common_ca_cert_store))

- name: slack
  type: slack-notification-docker
  source:
    url: ((slack-webhook-url))

- name: terraform-yaml
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file))
    region_name: ((aws-region))

resource_types:
- name: slack-notification-docker
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
