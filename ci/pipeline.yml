---
jobs:
- name: deploy-concourse-staging
  serial: true
  plan:
  - aggregate:
    - get: concourse-config
      trigger: true
    - get: pipeline-tasks
    - get: common
      resource: common-staging
      trigger: true
    - get: terraform-yaml
    - get: concourse-stemcell
      trigger: true
    - get: concourse-release
      trigger: true
    - get: garden-runc-release
      trigger: false
  - task: concourse-manifest
    config: &manifest-config
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: concourse-config
      - name: terraform-yaml
      - name: common
      run:
        path: concourse-config/generate.sh
        args: ["concourse-config/concourse-ops.yml", "concourse-config/concourse-staging.yml", "common/secrets.yml", "terraform-yaml/state.yml"]
      outputs:
      - name: concourse-manifest
  - &lint-manifest
    task: lint-manifest
    file: pipeline-tasks/lint-manifest.yml
    input_mapping:
      pipeline-config: concourse-config
      lint-manifest: concourse-manifest
  - put: concourse-staging-deployment
    params: &deploy-params
      manifest: concourse-manifest/manifest.yml
      releases:
      - concourse-release/*.tgz
      - garden-runc-release/*.tgz
      stemcells:
      - concourse-stemcell/*.tgz
  - task: smoke-test
    file: concourse-config/ci/smoke-test.yml
    params:
      ATC_URL: http://0.web.staging-concourse.concourse-staging.toolingbosh:8080
      BASIC_AUTH_USERNAME: ((basic-auth-username-staging))
      BASIC_AUTH_PASSWORD: ((basic-auth-password-staging))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy Concourse on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed Concourse on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-concourse-production
  serial: true
  plan:
  - aggregate:
    - get: concourse-config
      passed: [deploy-concourse-staging]
      trigger: true
    - get: pipeline-tasks
    - get: terraform-yaml
    - get: common
      resource: common-production
      trigger: true
    - get: concourse-stemcell
      trigger: true
      passed: [deploy-concourse-staging]
    - get: concourse-release
      trigger: true
      passed: [deploy-concourse-staging]
    - get: garden-runc-release
      trigger: false
      passed: [deploy-concourse-staging]
  - task: concourse-manifest
    config:
      <<: *manifest-config
      run:
        path: concourse-config/generate.sh
        args: ["concourse-config/concourse-ops.yml", "concourse-config/concourse-production.yml", "common/secrets.yml", "terraform-yaml/state.yml"]
  - *lint-manifest
  - put: concourse-production-deployment
    params: *deploy-params
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy Concourse on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed Concourse on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: concourse-config
  type: git
  source:
    uri: ((concourse-config-git-url))
    branch: ((concourse-config-git-branch))
    paths:
    - concourse*.yml
    - rds*.yml
    - generate.sh
    - ci/*

- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: common-production
  type: cg-common
  source:
    bucket_name: ((concourse-production-private-bucket))
    region: ((aws-region))
    secrets_file: concourse-tooling-prod.yml
    secrets_passphrase: ((concourse-production-private-passphrase))

- name: common-staging
  type: cg-common
  source:
    bucket_name: ((concourse-staging-private-bucket))
    region: ((aws-region))
    secrets_file: concourse-tooling-staging.yml
    secrets_passphrase: ((concourse-staging-private-passphrase))

- name: concourse-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version_family: 3468.latest

- name: concourse-release
  type: bosh-io-release
  source:
    repository: concourse/concourse

- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: concourse-production-deployment
  type: bosh-deployment
  source:
    target: ((concourse-production-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    deployment: ((concourse-production-deployment-bosh-deployment))
    ca_cert: ((common_ca_cert_store))

- name: concourse-staging-deployment
  type: bosh-deployment
  source:
    target: ((concourse-staging-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    deployment: ((concourse-staging-deployment-bosh-deployment))
    ca_cert: ((common_ca_cert_store))

- name: slack
  type: slack-notification-docker
  source:
    url: ((slack-webhook-url))

- name: terraform-yaml
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file))
    region_name: ((aws-region))

resource_types:
- name: slack-notification-docker
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
